{"version":3,"file":"blocks.js","mappings":"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","sources":["webpack://cbox-openlab-core/./assets/src/components/post-sharing-options.js","webpack://cbox-openlab-core/external window [\"wp\",\"components\"]","webpack://cbox-openlab-core/external window [\"wp\",\"data\"]","webpack://cbox-openlab-core/external window [\"wp\",\"editPost\"]","webpack://cbox-openlab-core/external window [\"wp\",\"element\"]","webpack://cbox-openlab-core/external window [\"wp\",\"i18n\"]","webpack://cbox-openlab-core/external window [\"wp\",\"plugins\"]","webpack://cbox-openlab-core/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://cbox-openlab-core/webpack/bootstrap","webpack://cbox-openlab-core/webpack/runtime/compat get default export","webpack://cbox-openlab-core/webpack/runtime/define property getters","webpack://cbox-openlab-core/webpack/runtime/hasOwnProperty shorthand","webpack://cbox-openlab-core/webpack/runtime/make namespace object","webpack://cbox-openlab-core/./assets/src/blocks.js"],"sourcesContent":["/* global openlabBlocksPostVisibility */\n\nimport { VisuallyHidden } from '@wordpress/components'\nimport { PluginDocumentSettingPanel } from '@wordpress/edit-post'\nimport { registerPlugin } from '@wordpress/plugins'\nimport { useDispatch, useSelect } from '@wordpress/data'\nimport { __ } from '@wordpress/i18n'\n\nconst PostSharingOptions = ({}) => {\n\tconst { blogPublic } = openlabBlocksPostVisibility\n\n\tconst { editPost } = useDispatch( 'core/editor' )\n\n\tconst blogPublicInt = parseInt( blogPublic )\n\n\tconst { postVisibility } = useSelect( ( select ) => {\n\t\tconst postMeta = select( 'core/editor' ).getEditedPostAttribute( 'meta' )\n\n\t\tconst defaultVisibility = blogPublicInt >= 0 ? 'default' : 'members-only'\n\n\t\treturn {\n\t\t\tpostVisibility: postMeta.openlab_post_visibility || defaultVisibility,\n\t\t}\n\t} )\n\n\tif ( blogPublicInt < -1 ) {\n\t\treturn null\n\t}\n\n\tconst onChange = ( value ) => {\n\t\teditPost( { meta: { 'openlab_post_visibility': value } } )\n\t}\n\n\tconst visibilityOptions = [\n\t\t{\n\t\t\tvalue: 'group-members-only',\n\t\t\tlabel: __( 'Site Members', 'commons-in-a-box' ),\n\t\t\tinfo: __( 'Only members of the current site can see this post. This will override the Public visibility setting above.', 'commons-in-a-box' )\n\t\t},\n\t\t{\n\t\t\tvalue: 'members-only',\n\t\t\tlabel: __( 'Community members only', 'commons-in-a-box' ),\n\t\t\tinfo: __( 'Only logged-in members of the community can see this post.', 'commons-in-a-box' )\n\t\t}\n\t]\n\n\tif ( blogPublicInt >= 0 ) {\n\t\tvisibilityOptions.push( {\n\t\t\tvalue: 'default',\n\t\t\tlabel: __( 'Everyone', 'commons-in-a-box' ),\n\t\t\tinfo: __( 'Everyone who can view this site can see this post.', 'commons-in-a-box' )\n\t\t} )\n\t}\n\n\treturn (\n\t\t<PluginDocumentSettingPanel\n\t\t\tname=\"post-sharing-options\"\n\t\t\ttitle={ __( 'More visibility options', 'commons-in-a-box' ) }\n\t\t\tclassName=\"post-sharing-options\"\n\t\t>\n\t\t\t<fieldset className=\"editor-post-visibility__fieldset\">\n\t\t\t\t<VisuallyHidden as=\"legend\">\n\t\t\t\t\t{ __( 'Sharing', 'commons-in-a-box' ) }\n\t\t\t\t</VisuallyHidden>\n\n\t\t\t\t<p>{ __( 'Control who can see this post.', 'commons-in-a-box' ) }</p>\n\n\t\t\t\t{ visibilityOptions.map( ( option ) => (\n\t\t\t\t\t<PostSharingChoice\n\t\t\t\t\t\tkey={ option.value }\n\t\t\t\t\t\tinstanceId=\"post-sharing-options\"\n\t\t\t\t\t\tvalue={ option.value }\n\t\t\t\t\t\tlabel={ option.label }\n\t\t\t\t\t\tinfo={ option.info }\n\t\t\t\t\t\tonChange={ ( event ) => onChange( event.target.value ) }\n\t\t\t\t\t\tchecked={ postVisibility === option.value }\n\t\t\t\t\t/>\n\t\t\t\t) ) }\n\t\t\t</fieldset>\n\t\t</PluginDocumentSettingPanel>\n\t)\n}\n\nfunction PostSharingChoice( { instanceId, value, label, info, ...props } ) {\n\treturn (\n\t\t<div className=\"editor-post-visibility__choice\">\n\t\t\t<input\n\t\t\t\ttype=\"radio\"\n\t\t\t\tname={ `editor-post-visibility__setting-${ instanceId }` }\n\t\t\t\tvalue={ value }\n\t\t\t\tid={ `editor-post-${ value }-${ instanceId }` }\n\t\t\t\taria-describedby={ `editor-post-${ value }-${ instanceId }-description` }\n\t\t\t\tclassName=\"editor-post-visibility__radio\"\n\t\t\t\t{ ...props }\n\t\t\t/>\n\t\t\t<label\n\t\t\t\thtmlFor={ `editor-post-${ value }-${ instanceId }` }\n\t\t\t\tclassName=\"editor-post-visibility__label\"\n\t\t\t>\n\t\t\t\t{ label }\n\t\t\t</label>\n\t\t\t<p\n\t\t\t\tid={ `editor-post-${ value }-${ instanceId }-description` }\n\t\t\t\tclassName=\"editor-post-visibility__info\"\n\t\t\t>\n\t\t\t\t{ info }\n\t\t\t</p>\n\t\t</div>\n\t);\n}\n\nconst OpenlabPostVisibilityPlugin = () => {\n  const isSiteEditor = useSelect( ( select ) => {\n    const editSite = select( 'core/edit-site' );\n    return !!editSite;\n  }, [] );\n\n  return !isSiteEditor && <PostSharingOptions />;\n};\n\nconst registerPostVisibility = () => {\n  registerPlugin( 'post-sharing-options', {\n    render: OpenlabPostVisibilityPlugin,\n    icon: 'visibility',\n  } );\n};\n\nwp.domReady( registerPostVisibility );\n","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"plugins\"];","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Loads all blocks and components needed across the network.\n */\n\nimport './components/post-sharing-options';\n"],"names":["VisuallyHidden","PluginDocumentSettingPanel","registerPlugin","useDispatch","useSelect","__","PostSharingOptions","_ref","blogPublic","openlabBlocksPostVisibility","editPost","blogPublicInt","parseInt","postVisibility","select","postMeta","getEditedPostAttribute","defaultVisibility","openlab_post_visibility","onChange","value","meta","visibilityOptions","label","info","push","createElement","name","title","className","as","map","option","PostSharingChoice","key","instanceId","event","target","checked","_ref2","props","_extends","type","id","htmlFor","OpenlabPostVisibilityPlugin","isSiteEditor","editSite","registerPostVisibility","render","icon","wp","domReady"],"sourceRoot":""}